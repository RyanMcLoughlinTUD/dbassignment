-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-10-27 15:12:32 IST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE custpc (
    custname       VARCHAR2(255) NOT NULL,
    custid         INTEGER NOT NULL,
    completestatus CHAR(1) NOT NULL,
    custaddress    VARCHAR2(255) NOT NULL,
    orderdate      DATE NOT NULL,
    personid       INTEGER NOT NULL
);

ALTER TABLE custpc ADD CONSTRAINT custpc_pk PRIMARY KEY ( custid );

CREATE TABLE partsdefect (
    pcid           INTEGER NOT NULL,
    stocktype      VARCHAR2(100) NOT NULL,
    stockid        INTEGER NOT NULL,
    partsreturn_id NUMBER NOT NULL
);

CREATE TABLE partsreturn (
    stockid         INTEGER NOT NULL,
    stocktype       VARCHAR2(100) NOT NULL,
    supplieraddress VARCHAR2(255) NOT NULL,
    supplierid      INTEGER NOT NULL,
    partsreturn_id  NUMBER NOT NULL
);

ALTER TABLE partsreturn ADD CONSTRAINT partsreturn_pk PRIMARY KEY ( partsreturn_id );

CREATE TABLE pcspecs (
    custid  INTEGER NOT NULL,
    stockid INTEGER NOT NULL,
    noused  INTEGER NOT NULL
);

ALTER TABLE pcspecs ADD CONSTRAINT pcspecs_pk PRIMARY KEY ( custid,
                                                            stockid );

CREATE TABLE persondetails (
    personid      INTEGER NOT NULL,
    personname    VARCHAR2(100) NOT NULL,
    personaddress VARCHAR2(255) NOT NULL,
    personemail   VARCHAR2(100) NOT NULL,
    personphone   INTEGER NOT NULL
);

COMMENT ON COLUMN persondetails.personphone IS
    '	';

ALTER TABLE persondetails ADD CONSTRAINT persondetails_pk PRIMARY KEY ( personid );

CREATE TABLE stock (
    stocktype         VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
     NOT NULL,
    stockid           INTEGER NOT NULL,
    stockmanufacturer VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
     NOT NULL,
    stockamount       INTEGER NOT NULL,
    supplierid        INTEGER NOT NULL
);

ALTER TABLE stock ADD CONSTRAINT stock_pk PRIMARY KEY ( stockid );

CREATE TABLE supplierdeliveries (
    supplierid      INTEGER NOT NULL,
    supplieraddress VARCHAR2(255) NOT NULL,
    supplierphone   VARCHAR2(10) NOT NULL
);

ALTER TABLE supplierdeliveries ADD CONSTRAINT supplierdeliveries_pk PRIMARY KEY ( supplierid );

ALTER TABLE custpc
    ADD CONSTRAINT custpc_persondetails_fk FOREIGN KEY ( personid )
        REFERENCES persondetails ( personid );

ALTER TABLE partsdefect
    ADD CONSTRAINT partsdefect_partsreturn_fk FOREIGN KEY ( partsreturn_id )
        REFERENCES partsreturn ( partsreturn_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE partsreturn
    ADD CONSTRAINT partsreturn_supplierdeliveries_fk FOREIGN KEY ( supplierid )
        REFERENCES supplierdeliveries ( supplierid );

ALTER TABLE pcspecs
    ADD CONSTRAINT pcspecs_custpc_fk FOREIGN KEY ( custid )
        REFERENCES custpc ( custid );

ALTER TABLE pcspecs
    ADD CONSTRAINT pcspecs_stock_fk FOREIGN KEY ( stockid )
        REFERENCES stock ( stockid );

ALTER TABLE stock
    ADD CONSTRAINT stock_supplierdeliveries_fk FOREIGN KEY ( supplierid )
        REFERENCES supplierdeliveries ( supplierid );

CREATE SEQUENCE partsreturn_partsreturn_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER partsreturn_partsreturn_id_trg BEFORE
    INSERT ON partsreturn
    FOR EACH ROW
    WHEN ( new.partsreturn_id IS NULL )
BEGIN
    :new.partsreturn_id := partsreturn_partsreturn_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             12
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           1
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   3
-- WARNINGS                                 0
